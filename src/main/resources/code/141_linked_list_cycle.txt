/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
        if (head ==null) return false;
        Set<ListNode> uniqueSet = new HashSet<>();
        if( head.next == null) return false;
        ListNode current = head;
        while (current.next!=null){
            boolean isNotInSet = uniqueSet.add(current);
            if(!isNotInSet) return true;
            current = current.next;
        }
        return false;
    }
}