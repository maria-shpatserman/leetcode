class Solution {
    public String longestPalindrome(String s) {

        List<String> evenPolindroms = evenPolindroms(s);
        List<String> oddPolindroms = oddPolindroms(s);
        if (evenPolindroms.size() == 0 && oddPolindroms.size() == 0) {
            return s.substring(0, 1);
        }
        String longestEvenPolindrom = s.substring(0, 1);
        String longestOddPolindrom = s.substring(0, 1);
        if (evenPolindroms.size() > 0) {
            longestEvenPolindrom = evenPolindroms.stream().max(Comparator.comparing(x -> x.length())).get();

        }
        if (oddPolindroms.size() > 0) {
            longestOddPolindrom = oddPolindroms.stream().max(Comparator.comparing(x -> x.length())).get();
        }
        if (longestOddPolindrom.length() > longestEvenPolindrom.length()) {
            return longestOddPolindrom;
        } else return longestEvenPolindrom;

    }

    public List<String> oddPolindroms(String s) {
        List<String> result = new ArrayList<>();
        char[] charArray = s.toCharArray();

        int arrayLength = charArray.length;
        for (int i = 0; i < arrayLength; i++) {
            int leftIndex = i - 1;
            int rightIndex = i + 1;
            while (leftIndex >= 0 && rightIndex < arrayLength && charArray[leftIndex] == charArray[rightIndex]) {
                result.add(s.substring(leftIndex, rightIndex + 1));
                leftIndex--;
                rightIndex++;
            }
        }
        return result;
    }


    public List<String> evenPolindroms(String s) {
        char[] charArray = s.toCharArray();

        int arrayLength = charArray.length;
        List<String> result = new ArrayList<>();
        for (int i = 0; i < arrayLength; i++) {
            int leftIndex = i;
            int rightIndex = i + 1;
            while (leftIndex >= 0 && rightIndex < arrayLength && charArray[leftIndex] == charArray[rightIndex]) {
                result.add(s.substring(leftIndex, rightIndex + 1));
                leftIndex--;
                rightIndex++;
            }
        }
        return result;
    }
}